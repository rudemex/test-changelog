name: "Release"

on:
  push:
    branches: [ master ]

env:
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  GITHUB_EMAIL: ${{ secrets.GH_EMAIL }}

jobs:
  setup:
    runs-on: ubuntu-latest
    name: "Setup"
    steps:
      - name: "⚙ Set up Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: "✅ Checkout repository"
        uses: actions/checkout@v3

  release:
    runs-on: ubuntu-latest
    name: "Release"
    needs: setup
    steps:
      - name: "⚙ Set up Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: "✅ Checkout repository"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: "💾 Restore Dependencies from cache"
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: "📦 Install packages"
        run: yarn install

      - name: "🏷️ Create Release"
        id: Release
        run: |
          git config --global user.name "GitHub CI/CD bot"
          git config --global user.email "${GITHUB_EMAIL}"
          changelog=$(yarn release --dry-run --packageFiles 'version.txt' --bumpFiles 'version.txt' | awk -v RS="---" 'NR==2')
          git push --follow-tags origin master
          tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "TAG=$tag" >> $GITHUB_OUTPUT
          echo "CHANGELOG=$changelog" >> $GITHUB_OUTPUT
          #echo "::set-output name=changelog::$(echo "$changelog")" >> $GITHUB_OUTPUT

      #- name: "📄 Create Changelog"
      #  uses: Bullrich/generate-release-changelog@master
      #  id: Changelog
      #  env:
      #    REPO: ${{ github.repository }}

      - name: "🚀 Publish Release"
        uses: actions/create-release@v1
        with:
          tag_name: "${{steps.Release.outputs.TAG}}"
          release_name: "${{steps.Release.outputs.TAG}}"
          body: |
            ${{ steps.Release.outputs.TAG }}
                        
            ---
            
            > 💬 All notable changes to this project will be documented in [Changelog](${{ github.event.repository.html_url }}/blob/master/CHANGELOG.md) file.
          draft: false
          prerelease: false

      - name: "🔁 Rebase"
        run: |
          git remote set-url origin "https://github.com/${{ github.repository }}.git"
          git config --global user.name "GitHub CI/CD bot"
          git config --global user.email "${GITHUB_EMAIL}"
          git config pull.rebase true
          git fetch
          git checkout develop
          git pull
          git merge --no-ff -m "ci(rebase): merge master" origin/master
          git push -f
